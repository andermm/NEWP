#+TITLE: LabBook
#+AUTHOR: Anderson Mattheus Maliszewski
#+STARTUP: overview indent
#+TAGS: noexport(n) deprecated(d) 
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w!) | DONE(d!) CANCELLED(c!) DEFERRED(f!)

This LabBook is for the *The International Conference On Computational
Science and its Applications (ICCSA 2020)* paper and has a wealth of
informations about the entire process used during the proposed
experiments. To reproduce this evaluation, you can follow the steps
below. Have fun!

* Experimental Project
** Graphical Analysis
*** Read CSVs
#+begin_src R :results output :session *R* :exports both
options(crayon.enabled=FALSE)
suppressMessages(library("tidyverse"));
df_apps_RegularTCP <- read_csv("/home/mrneverdie/Git/NEWP/RESULTS/Regular-TCP-4NICs/LOGS/apps_exec.16-08-2020.23h49m28s.csv", progress=FALSE)
df_apps_4NICs_802.3ad_layer2 <- read_csv("/home/mrneverdie/Git/NEWP/RESULTS/802.3ad-4NICs-layer2/LOGS/apps_exec.15-08-2020.18h17m03s.csv", progress=FALSE)
df_apps_4NICs_balance_rr_layer2 <- read_csv("/home/mrneverdie/Git/NEWP/RESULTS/Balance-RR-4NICs-layer2/LOGS/apps_exec.24-08-2020.17h45m27s.csv", progress=FALSE)
df_apps=bind_rows(df_apps_RegularTCP,df_apps_4NICs_802.3ad_layer2,df_apps_4NICs_balance_rr_layer2)
df_apps$apps=toupper(df_apps$apps)

df_apps %>%
  group_by(apps,bondmode) %>%
  summarise(
    average=mean(time),
    std=sd(time),
    ste=3*std/sqrt(n()),
    N=n()) %>%
  arrange(apps,bondmode) -> df_apps
df_apps


#+end_src

#+RESULTS:
#+begin_example

Parsed with column specification:
cols(
  apps = col_character(),
  bondmode = col_character(),
  time = col_double()
)

Parsed with column specification:
cols(
  apps = col_character(),
  bondmode = col_character(),
  time = col_double()
)

Parsed with column specification:
cols(
  apps = col_character(),
  bondmode = col_character(),
  time = col_double()
)

`summarise()` regrouping output by 'apps' (override with `.groups` argument)

# A tibble: 15 x 6
# Groups:   apps [5]
   apps  bondmode                         average     std    ste     N
   <chr> <chr>                              <dbl>   <dbl>  <dbl> <int>
 1 ALYA  802.3ad-4NICs-layer2              902.    1.54   0.844     30
 2 ALYA  Balance_Round_Robin-4NICs-layer2  903.   18.2    9.99      30
 3 ALYA  Regular-TCP-4NICs                 899.    1.89   1.04      30
 4 BT    802.3ad-4NICs-layer2              176.    0.386  0.211     30
 5 BT    Balance_Round_Robin-4NICs-layer2  181.    1.25   0.683     30
 6 BT    Regular-TCP-4NICs                 187.    0.811  0.444     30
 7 FT    802.3ad-4NICs-layer2               93.8   0.397  0.217     30
 8 FT    Balance_Round_Robin-4NICs-layer2   81.0   0.740  0.405     30
 9 FT    Regular-TCP-4NICs                 112.    0.458  0.251     30
10 IS    802.3ad-4NICs-layer2                9.26  0.0593 0.0325    30
11 IS    Balance_Round_Robin-4NICs-layer2    8.08  0.160  0.0874    30
12 IS    Regular-TCP-4NICs                  11.9   0.208  0.114     30
13 SP    802.3ad-4NICs-layer2              194.    1.21   0.665     30
14 SP    Balance_Round_Robin-4NICs-layer2  205.    1.81   0.989     30
15 SP    Regular-TCP-4NICs                 217.    1.24   0.679     30
#+end_example
*** BT
#+begin_src R :results output graphics :file  R/PLOTS/BT.pdf :exports both :width 1.8 :height 2.3 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.4, position = position_dodge(1)) +
              theme_bw(base_size=10) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a"),
                         breaks=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"),
                        labels=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2")) +
               theme(legend.position = "none", 
                    plot.margin = unit(x = c(0.1, 0.1, -0.2, 0), units = "cm"),
                    legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(color = "black"),
                    axis.text.y = element_text(color = "black"),
                    axis.title=element_text(size=10), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 10)) +
              labs(y="Execution Time [s]",
                   x=element_blank())

#+end_src

#+RESULTS:
[[file:R/PLOTS/BT.pdf]]
*** SP
#+begin_src R :results output graphics :file  R/PLOTS/SP.pdf :exports both :width 1.8 :height 2.3 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.4, position = position_dodge(1)) +
              theme_bw(base_size=10) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a"),
                         breaks=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"),
                        labels=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2")) +
               theme(legend.position = "none", 
                    plot.margin = unit(x = c(0.1, 0.1, -0.2, 0), units = "cm"),
                    legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(color = "black"),
                    axis.text.y = element_text(color = "black"),
                    axis.title=element_text(size=10), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 10)) +
              labs(y="Execution Time [s]",
                   x=element_blank())
#+end_src

#+RESULTS:
[[file:R/PLOTS/SP.pdf]]

*** IS
#+begin_src R :results output graphics :file  R/PLOTS/IS.pdf :exports both :width 1.8 :height 2.3 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.4, position = position_dodge(1)) +
              theme_bw(base_size=10) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a"),
                         breaks=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"),
                        labels=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2")) +
               theme(legend.position = "none", 
                    plot.margin = unit(x = c(0.1, 0.1, -0.2, 0), units = "cm"),
                    legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(color = "black"),
                    axis.text.y = element_text(color = "black"),
                    axis.title=element_text(size=10), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 10)) +
              labs(y="Execution Time [s]",
                   x=element_blank())

#+end_src

#+RESULTS:
[[file:R/PLOTS/IS.pdf]]

*** FT
#+begin_src R :results output graphics :file  R/PLOTS/FT.pdf :exports both :width 1.8 :height 2.3 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.4, position = position_dodge(1)) +
              theme_bw(base_size=10) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a"),
                         breaks=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"),
                        labels=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2")) +
               theme(legend.position = "none", 
                    plot.margin = unit(x = c(0.1, 0.1, -0.2, 0), units = "cm"),
                    legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(color = "black"),
                    axis.text.y = element_text(color = "black"),
                    axis.title=element_text(size=10), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 10)) +
              labs(y="Execution Time [s]",
                   x=element_blank())
#+end_src
#+RESULTS:
[[file:R/PLOTS/FT.pdf]]

*** Alya
#+begin_src R :results output graphics :file  R/PLOTS/ALYA.pdf :exports both :width 1.8 :height 2.3 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.4, position = position_dodge(1)) +
              theme_bw(base_size=10) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a"),
                         breaks=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2"),
                        labels=c("Regular-TCP-4NICs", "802.3ad-4NICs-layer2", "Balance_Round_Robin-4NICs-layer2")) +
               theme(legend.position = "none", 
                    plot.margin = unit(x = c(0.1, 0.1, -0.2, 0), units = "cm"),
                    legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(color = "black"),
                    axis.text.y = element_text(color = "black"),
                    axis.title=element_text(size=10), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 10)) +
              labs(y="Execution Time [s]",
                   x=element_blank())
#+end_src

#+RESULTS:
[[file:R/PLOTS/ALYA.pdf]]

*** Legend
#+begin_src R :results output graphics :file  R/PLOTS/Legend.pdf :exports both :width 1.8 :height 4 :session *R* 
options(crayon.enabled=FALSE)
suppressMessages(library("ggplot2"));
suppressMessages(library("grid"));
suppressMessages(library("gridExtra"));
my_hist <- ggplot(df_apps, aes(apps, fill=bondmode)) +
geom_bar()
theme(legend.position = "top",
legend <- cowplot::get_legend(my_hist),
grid.newpage(),
grid.draw(legend)) 
#+end_src

#+RESULTS:
[[file:R/PLOTS/Legend.pdf]]
*** Legend 1
#+begin_src R :results output graphics :file  R/PLOTS/Legend1.pdf :exports both :width 11 :height 4 :session *R* 
df_apps$bondmode <- factor(df_apps$bondmode,levels = c("RegularTCP-1NIC", "802.3ad-2NICs-layer2", "802.3ad-4NICs-layer2", "802.3ad-2NICs-layer2+3", "802.3ad-4NICs-layer2+3", "802.3ad-2NICs-layer3+4", "802.3ad-4NICs-layer3+4"))
            ggplot(df_apps[df_apps$apps %in% c("BT"), ], aes(x=apps, y=average, fill=bondmode)) +
              geom_bar(stat="identity", position = "dodge",  colour="black",size=0.3,width = 1) +
              geom_errorbar(aes(ymin=average-ste, ymax=average+ste), width=0.5, position = position_dodge(1)) +
              theme_bw(base_size=12) +
              scale_fill_manual(values=c("#B7B2AF", "#005b9e", "#79c45a", "#337cb1", "#94d07b", "#669dc5", "#afdc9c"),
                         breaks=c("RegularTCP-1NIC", "802.3ad-2NICs-layer2", "802.3ad-4NICs-layer2", "802.3ad-2NICs-layer2+3", "802.3ad-4NICs-layer2+3", "802.3ad-2NICs-layer3+4", "802.3ad-4NICs-layer3+4"),
                        labels=c("Regular TCP 1NIC", "802.3ad-2NICs Layer2", "802.3ad-4NICs Layer2", "802.3ad-2NICs Layer2+3", "802.3ad-4NICs Layer2+3", "802.3ad-2NICs Layer3+4", "802.3ad-4NICs Layer3+4")) +
               theme(legend.position = "top", 
                    plot.margin = unit(x = c(0, 0.01, -0.3, -0.25), units = "cm"),
                    #legend.margin=margin(c(0, 0, -8, 0)),
                    axis.text.x = element_text(size =14, color = "black"),
                    axis.text.y = element_text(size =14, color = "black"),
                    axis.title=element_text(size=14), 
                    legend.title = element_blank(),
                    legend.text = element_text(color = "black", size = 14)) +
              labs(y=element_blank(),
                   x=element_blank())
#+end_src

#+RESULTS:
[[file:R/PLOTS/Legend1.pdf]]
